"use strict";var alternating=0;var testimonialContainer=document.getElementById("testimonial_container");var navbar=document.getElementById("navbar");var counter=0;var elements;var objects;var positions;db.collection("testimonials").get().then(function(snapshot){snapshot.docs.forEach(function(doc){displayTestimonials(doc.data())})});function displayTestimonials(obj){var list=Object.values(obj);for(var _i=0,_list=list;_i<_list.length;_i++){var i=_list[_i];var container=document.createElement("div");container.classList.add("container");container.classList.add("section");container.classList.add("transparent");container.classList.add("testimonial");var jumbotron=document.createElement("div");if(alternating%2===0){jumbotron.classList.add("jumbotron-1")}else{jumbotron.classList.add("jumbotron-2")}var para=document.createElement("p");para.innerHTML="\""+i+"\"";container.appendChild(jumbotron);jumbotron.appendChild(para);testimonialContainer.appendChild(container);alternating++}elements=document.getElementsByClassName("section");objects=Array.prototype.slice.call(elements);positions=objects.map(function(i){return i.offsetTop});scroll()}window.onscroll=function(){scroll()};function scroll(){if(window.pageYOffset>=25){navbar.classList.remove("background-default");navbar.classList.remove("background-trans");navbar.classList.add("background-white")}else{navbar.classList.remove("background-white");navbar.classList.add("background-trans")}if(window.pageYOffset+window.screen.height*0.8>=positions[counter]){elements[counter].classList.add("opaque");elements[counter].classList.add("raise");elements[counter].classList.remove("transparent");counter++;if(positions[counter]<=window.pageYOffset+window.screen.height*0.8){scroll()}}if(window.pageYOffset+window.screen.height*0.85<=positions[counter]){elements[counter].classList.remove("opaque");elements[counter].classList.remove("raise");elements[counter].classList.add("transparent");counter--;if(positions[counter]>=window.pageYOffset+window.screen.height*0.85){scroll()}}}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,